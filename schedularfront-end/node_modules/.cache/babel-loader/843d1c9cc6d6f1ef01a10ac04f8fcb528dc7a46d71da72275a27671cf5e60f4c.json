{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst Schedule = require('../models/Schedule');\nconst OpenAI = require('openai-api');\nconst OPENAI_API_KEY = 'your_openai_api_key';\nconst openai = new OpenAI(OPENAI_API_KEY);\nrouter.post('/', async (req, res) => {\n  const {\n    title,\n    description,\n    date,\n    timeWindow,\n    taskCategory,\n    prompt,\n    priority\n  } = req.body;\n  const gptResponse = await openai.complete({\n    engine: 'davinci',\n    prompt: `Create a schedule with the following details:\\nTitle: ${title}\\nDescription: ${description}\\nDate: ${date}\\nTime Window: ${timeWindow}\\nTask Category: ${taskCategory}\\nPrompt: ${prompt}\\nPriority: ${priority}`,\n    maxTokens: 50\n  });\n  const schedule = new Schedule({\n    title,\n    description,\n    date,\n    timeWindow,\n    taskCategory,\n    prompt,\n    priority\n  });\n  await schedule.save();\n  res.send(schedule);\n});\nrouter.get('/', async (req, res) => {\n  const schedules = await Schedule.find();\n  res.send(schedules);\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","Schedule","OpenAI","OPENAI_API_KEY","openai","post","req","res","title","description","date","timeWindow","taskCategory","prompt","priority","body","gptResponse","complete","engine","maxTokens","schedule","save","send","get","schedules","find","module","exports"],"sources":["C:/Users/abura/AndroidStudioProjects/Schedularai.ai/schedularfront-end/src/components/ScheduleList.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Schedule = require('../models/Schedule');\r\nconst OpenAI = require('openai-api');\r\n\r\nconst OPENAI_API_KEY = 'your_openai_api_key';\r\nconst openai = new OpenAI(OPENAI_API_KEY);\r\n\r\nrouter.post('/', async (req, res) => {\r\n  const { title, description, date, timeWindow, taskCategory, prompt, priority } = req.body;\r\n\r\n  const gptResponse = await openai.complete({\r\n    engine: 'davinci',\r\n    prompt: `Create a schedule with the following details:\\nTitle: ${title}\\nDescription: ${description}\\nDate: ${date}\\nTime Window: ${timeWindow}\\nTask Category: ${taskCategory}\\nPrompt: ${prompt}\\nPriority: ${priority}`,\r\n    maxTokens: 50\r\n  });\r\n\r\n  const schedule = new Schedule({ title, description, date, timeWindow, taskCategory, prompt, priority });\r\n  await schedule.save();\r\n\r\n  res.send(schedule);\r\n});\r\n\r\nrouter.get('/', async (req, res) => {\r\n  const schedules = await Schedule.find();\r\n  res.send(schedules);\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,QAAQ,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMI,MAAM,GAAGJ,OAAO,CAAC,YAAY,CAAC;AAEpC,MAAMK,cAAc,GAAG,qBAAqB;AAC5C,MAAMC,MAAM,GAAG,IAAIF,MAAM,CAACC,cAAc,CAAC;AAEzCJ,MAAM,CAACM,IAAI,CAAC,GAAG,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,IAAI;IAAEC,UAAU;IAAEC,YAAY;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGR,GAAG,CAACS,IAAI;EAEzF,MAAMC,WAAW,GAAG,MAAMZ,MAAM,CAACa,QAAQ,CAAC;IACxCC,MAAM,EAAE,SAAS;IACjBL,MAAM,EAAG,yDAAwDL,KAAM,kBAAiBC,WAAY,WAAUC,IAAK,kBAAiBC,UAAW,oBAAmBC,YAAa,aAAYC,MAAO,eAAcC,QAAS,EAAC;IAC1NK,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG,IAAInB,QAAQ,CAAC;IAAEO,KAAK;IAAEC,WAAW;IAAEC,IAAI;IAAEC,UAAU;IAAEC,YAAY;IAAEC,MAAM;IAAEC;EAAS,CAAC,CAAC;EACvG,MAAMM,QAAQ,CAACC,IAAI,CAAC,CAAC;EAErBd,GAAG,CAACe,IAAI,CAACF,QAAQ,CAAC;AACpB,CAAC,CAAC;AAEFrB,MAAM,CAACwB,GAAG,CAAC,GAAG,EAAE,OAAOjB,GAAG,EAAEC,GAAG,KAAK;EAClC,MAAMiB,SAAS,GAAG,MAAMvB,QAAQ,CAACwB,IAAI,CAAC,CAAC;EACvClB,GAAG,CAACe,IAAI,CAACE,SAAS,CAAC;AACrB,CAAC,CAAC;AAEFE,MAAM,CAACC,OAAO,GAAG5B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}